library(tidyverse)
library(anytime)
library(Hmisc)
nasa <- read_csv("/Users/Jack/Documents/data.csv")
nasa <- nasa[c(1:2000),]
nasa <- nasa %>%
select(-X1, -method, -url) %>%
filter(bytes<3e+05) %>%
mutate(time = anytime(time)) %>%
mutate(day = weekdays(as.Date(time)))
nasa <- nasa[,c(1,4,2,5,3)]
head(nasa)
nasa %>% count(host)
?group_by
nasa_grouped <- nasa %>%
group_by(host) %>%
summarise(avg_bytes = mean(bytes))
View(nasa_grouped)
nasa_grouped <- nasa %>%
group_by(host) %>%
summarise(avg_bytes = mean(bytes), total_bytes = sum(bytes))
head(nasa_grouped)
merge(nasa, nasa_grouped, by = "host")
mode(nasa$day)
nasa %>% ggplot(aes(x=day)) +
geom_bar()
library(tidymodels)
rf_model <- rand_forest
library(tidymodels)
rf_class_model <- rand_forest() %>%
set_engine("randomForest") %>%
set_mode("classification")
calls <- iris
call_split <- calls %>%
initial_split()
call_train <- training(call_split)
call_test <- testing(call_split)
rf_class_model <-
call_train
rf_class_fit <-
rf_class_model %>%
fit(Species ~ ., data = call_test)
rf_class_fit <-
rf_class_model %>%
fit(Species ~ ., data = call_test)
rf_class_fit <-
rf_class_model %>%
fit(Species ~ ., data = call_train)
rf_class_fit <-
rf_class_model %>%
fit(Species ~ ., data = call_train)
rf_class_fit <-
rf_class_model %>%
fit(Species ~ ., data = call_train)
library(tidymodels)
rf_class_fit <-
rf_class_model %>%
fit(Species ~ ., data = call_train)
rand_forest(mode = "classification") %>%
set_engine("randomForest")
rf_class_fit <-
rf_class_model %>%
fit(Species ~ ., data = call_train)
rand_forest(mode = "classification") %>%
set_engine("randomForest") %>%
fit(Species ~ ., data = call_train)
results <-
call_test %>%
bind_cols(predict(rf_class_fit, call_test))
results <-
call_test %>%
bind_cols(predict(rf_class_model, call_test))
rf_class_model %>% predict(class_test)
rf_class_model <-
call_train
rf_class_model %>% predict(class_test)
rf_class_model %>% predict(call_test)
rf_class_model <-
rand_forest(mode = "classification") %>%
set_engine("randomForest") %>%
fit(Species ~ ., data = call_train)
results <-
call_test %>%
bind_cols(predict(rf_class_model, call_test))
rf_class_model %>% predict(call_test)
calls <- read_csv("/Users/Jack/Documents/Log-Data-Feature-Gen/friends-and-moms.csv")
calls <- read_csv("/Users/Jack/Documents/Github/Log-Data-Feature-Gen/friends-and-moms.csv")
View(calls)
call_split <- calls %>%
initial_split()
call_train <- training(call_split)
call_test <- testing(call_split)
View(call_test)
View(call_train)
gender <- c("M", "M", "M", "M", "M", "M", "M", "M", "F", "F", "F", "F", "F", "M", "M")
gender <- c("M", "M", "M", "M", "M", "M", "M", "M", "F", "F", "F", "F", "F", "F", "M", "M")
calls<- data.frame(calls, gender)
View(calls)
calls<- data.frame(calls, gender)
View(calls)
calls<-
calls %>%
select(-gender.1)
head(nasa)
call_split <- calls %>%
initial_split(strata=gender)
View(call_train)
View(call_test)
call_train <- training(call_split)
call_test <- testing(call_split)
View(call_test)
View(call_train)
call_split <- calls %>%
initial_split(prop = 11/16, strata=gender)
call_train <- training(call_split)
call_test <- testing(call_split)
call_split <- calls %>%
initial_split(prop = 11/16, strata=gender)
call_train <- training(call_split)
call_test <- testing(call_split)
call_split <- calls %>%
initial_split(prop = 10/16, strata=gender)
call_train <- training(call_split)
call_test <- testing(call_split)
View(call_test)
View(call_train)
rf_class_model <-
rand_forest(mode = "classification") %>%
set_engine("randomForest") %>%
fit(gender ~ ., data = call_train)
rf_class_model %>% predict(call_test)
calls_vars<-
calls %>%
select(-NAME)
View(calls_vars)
call_split <- calls_vars %>%
initial_split(prop = 10/16, strata=gender)
call_train <- training(call_split)
call_test <- testing(call_split)
rf_class_model <-
rand_forest(mode = "classification") %>%
set_engine("randomForest") %>%
fit(gender ~ ., data = call_train)
rf_class_model %>% predict(call_test)
calls_vars<-
calls %>%
mutate_if(is.character(), as.numeric())
as.numeric(calls$WORD36846)
calls_vars<-
calls %>%
select_if(is.numeric())
as.numeric(calls$WORD36846)
as.numeric(calls[,2])
as.numeric(calls[,1])
as.integer(calls$WORD36846)
sapply(calls$WORD36846, function(x) eval(parse(text=x)))
library(MASS)
numerical(calls$WORD36846)
MASS::numerical(calls$WORD36846)
?unfractional
??unfractional
apply(calls, c(1, 2), function(x) eval(parse(text = x)))
apply(calls, c(2), function(x) eval(parse(text = x)))
calls_vars<-
calls %>%
select_if(calls, is.numeric())
calls_vars<-
calls %>%
select_if(is.numeric())
select_if(is.numeric
)
calls_vars<-
calls %>%
select_if(is.numeric)
call_split <- calls_vars %>%
initial_split(prop = 10/16, strata=gender)
call_train <- training(call_split)
call_test <- testing(call_split)
calls_vars<-
calls %>%
select_if(is.numeric) %>%
data.frame(calls, gender)
call_split <- calls_vars %>%
initial_split(prop = 10/16, strata=gender)
call_train <- training(call_split)
call_test <- testing(call_split)
rf_class_model <-
rand_forest(mode = "classification") %>%
set_engine("randomForest") %>%
fit(gender ~ ., data = call_train)
results <-
call_test %>%
bind_cols(predict(rf_class_model, call_test))
glimpse(call_vars)
glimpse(calls_vars)
calls <- read_csv("/Users/Jack/Documents/Github/Log-Data-Feature-Gen/friends-and-moms.csv")
calls <- read_csv("/Users/Jack/Documents/Github/Log-Data-Feature-Gen/featuredata.csv")
calls<- data.frame(calls, gender)
calls_vars<-
calls %>%
select(-NAME)
calls_vars<-
calls %>%
select(-NAME)
calls_vars<-
calls %>%
select(-NAME)
select(calls, -NAME)
calls_vars<-
calls %>%
select(NAME)
calls_vars<-
calls %>%
select(-`NAME `)
colnames(calls)
calls_vars<-
calls[,-1]
glimpse(calls_vars)
call_split <- calls_vars %>%
initial_split(prop = 10/16, strata=gender)
call_train <- training(call_split)
call_test <- testing(call_split)
rf_class_model <-
rand_forest(mode = "classification") %>%
set_engine("randomForest") %>%
fit(gender ~ ., data = call_train)
rf_class_model %>% predict(call_test)
results <-
call_test %>%
bind_cols(predict(rf_class_model, call_test))
View(results)
nasa <- read_csv("/Users/Jack/Documents/data.csv")
# Data transformations
nasa <- nasa[c(1:2000),]
nasa <- nasa %>%
select(-X1, -method, -url) %>%
filter(bytes<3e+05) %>%
mutate(time = anytime(time)) %>%
mutate(day = weekdays(as.Date(time)))
nasa <- nasa[,c(1,4,2,5,3)]
nasa_grouped <- nasa %>%
group_by(host) %>%
summarise(avg_bytes = mean(bytes),
total_bytes = sum(bytes))
nasa <- merge(nasa,
nasa_grouped,
by = "host")
nasa
nasa %>% count(host)
library(tidyverse)
nasa %>% count(host)
